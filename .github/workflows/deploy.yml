# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: self-hosted
    steps:
      
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Node.js
        run: | 
          curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
          sudo apt-get install -y nodejs
          node --version
          npm --version
      - name: Install docker
        run: |
            sudo apt-get update -y
            sudo apt install docker.io -y 
            sudo usermod -aG docker $USER


  

  Installing_pm2_and_deploy_application:
   needs: [build]
   runs-on: self-hosted
   steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: PM2 installation & Verify
      run: |
        sudo npm install -g pm2
        pm2 --version || true
    - name: Stop existing PM2 processes
      run: |
        cd /home/ubuntu/actions-runner/_work/node_project/node_project
        pm2 delete all || true
    - name: Start application with PM2
      run: |
        cd /home/ubuntu/actions-runner/_work/node_project/node_project
        pm2 start index.js --name "my-node-app"
    - name: Check application status
      run: pm2 status


  Create_Docker_image:
   needs: [Installing_pm2_and_deploy_application]
   runs-on: self-hosted
   steps: 
     - name: Checkout code
       uses: actions/checkout@v3
     - name: build image
       run: |           
            sudo docker build /home/ubuntu/actions-runner/_work/node_project/node_project --tag my-node-app
     - name: check docker images
       run: |           
          sudo docker images

#   Pushing_Docker_image_in_jfrog:
#    needs: Create_Docker_image
#    runs-on: self-hosted
#    steps:
#     - name: Checkout code
#       uses: actions/checkout@v2
#     - name: Push Docker image
#       run: |
#         docker login -umalvinder@arintech.in -p ${{ secrets.DOCKER_PASSWORD }} malvinder.jfrog.io
#         docker tag my-node-app:latest malvinder.jfrog.io/my-jfrog-repository/my-node-app:latest
#         docker push malvinder.jfrog.io/my-jfrog-repository/my-node-app:latest

   
  Pushing_Docker_image_in_jfrog:
   needs: Create_Docker_image
   runs-on: self-hosted
   steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Push Docker image
      run: |
        docker login -umalvinder@arintech.in -p ${{ secrets.DOCKER_PASSWORD }} malvinder.jfrog.io
        docker tag my-node-app:latest malvinder.jfrog.io/my-jfrog-repository/my-node-app:latest
        docker push malvinder.jfrog.io/my-jfrog-repository/my-node-app:latest
   
